version: '3.8'

services:
  # AfricaSuite Application
  africasuite:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
        DEPLOYMENT_MODE: selfhosted
        SUPABASE_URL: ${SUPABASE_URL:-http://localhost:54321}
        SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=development
      - DEPLOYMENT_MODE=selfhosted
    depends_on:
      - postgres
      - redis
    networks:
      - africasuite-network
    restart: unless-stopped

  # PostgreSQL Database (Supabase replacement for on-premise)
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-africasuite}
      POSTGRES_USER: ${POSTGRES_USER:-africasuite}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-africasuite123}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - africasuite-network
    restart: unless-stopped

  # Redis for sessions and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - africasuite-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # MinIO for file storage (S3-compatible)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-africasuite}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-africasuite123}
    volumes:
      - minio_data:/data
    networks:
      - africasuite-network
    restart: unless-stopped
    command: server /data --console-address ":9001"

  # NATS for event messaging (microservices preparation)
  nats:
    image: nats:alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    networks:
      - africasuite-network
    restart: unless-stopped
    command: ["-js", "-m", "8222"]

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - africasuite-network
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - africasuite-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  africasuite-network:
    driver: bridge