// Test de connexion Supabase simplifi√© pour Africa Suite Pulse
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://alffplvdnywwbrzygmoc.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFsZmZscHZkbnl3d2JyenlnbW9jIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ3OTIxNTUsImV4cCI6MjA3MDM2ODE1NX0.hV_xY6voTcybMwno9ViAVZvsN8Gbj8L-CDw2Jof17mY'

console.log('üîç Test Supabase Simplifi√© - Africa Suite Pulse')
console.log('===============================================')

async function testSupabaseSimple() {
  try {
    // Cr√©er le client Supabase
    const supabase = createClient(supabaseUrl, supabaseKey)
    console.log('‚úÖ Client Supabase cr√©√© avec succ√®s')
    console.log('üåê URL:', supabaseUrl)
    console.log('üîë Cl√© API:', supabaseKey.substring(0, 20) + '...')
    
    // Test d'authentification de base
    console.log('\nüîê Test d\'authentification...')
    const { data: authData, error: authError } = await supabase.auth.getSession()
    
    if (authError) {
      console.log('‚ùå Erreur auth:', authError.message)
      return false
    } else {
      console.log('‚úÖ Syst√®me d\'authentification accessible')
      console.log('üìä Session actuelle:', authData.session ? 'Connect√©' : 'Non connect√©')
    }
    
    // Test de connexion avec utilisateur de test
    console.log('\nüîë Test de connexion utilisateur...')
    try {
      const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
        email: 'admin@africasuite.com',
        password: 'AfricaSuite2025!'
      })
      
      if (signInError) {
        console.log('‚ö†Ô∏è  Connexion √©chou√©e:', signInError.message)
        
        // Essayer de cr√©er l'utilisateur
        console.log('\nüë§ Tentative de cr√©ation d\'utilisateur...')
        const { data: signUpData, error: signUpError } = await supabase.auth.signUp({
          email: 'admin@africasuite.com',
          password: 'AfricaSuite2025!',
          options: {
            data: {
              full_name: 'Admin Africa Suite',
              role: 'admin',
              site: 'africa-suite-pulse'
            }
          }
        })
        
        if (signUpError) {
          console.log('‚ö†Ô∏è  Cr√©ation utilisateur:', signUpError.message)
        } else {
          console.log('‚úÖ Utilisateur cr√©√© avec succ√®s')
          console.log('üìß Email:', signUpData.user?.email)
        }
      } else {
        console.log('‚úÖ Connexion r√©ussie!')
        console.log('üë§ Utilisateur:', signInData.user?.email)
        console.log('üÜî ID:', signInData.user?.id)
        
        // Test d'acc√®s aux donn√©es utilisateur
        console.log('\nüìä Test d\'acc√®s aux donn√©es...')
        const { data: userData, error: userError } = await supabase.auth.getUser()
        
        if (userError) {
          console.log('‚ö†Ô∏è  Erreur donn√©es utilisateur:', userError.message)
        } else {
          console.log('‚úÖ Donn√©es utilisateur accessibles')
          console.log('üìã M√©tadonn√©es:', userData.user?.user_metadata)
        }
        
        // D√©connexion
        await supabase.auth.signOut()
        console.log('üö™ D√©connexion effectu√©e')
      }
    } catch (error) {
      console.log('‚ùå Erreur test connexion:', error.message)
    }
    
    // Test de cr√©ation de table simple (si permissions)
    console.log('\nüóÑÔ∏è  Test de base de donn√©es...')
    try {
      const { data: testData, error: testError } = await supabase
        .from('test_connection')
        .select('*')
        .limit(1)
      
      if (testError) {
        console.log('‚ö†Ô∏è  Table test non accessible:', testError.message)
        console.log('üí° Ceci est normal si la table n\'existe pas encore')
      } else {
        console.log('‚úÖ Acc√®s base de donn√©es fonctionnel')
        console.log('üìä Donn√©es test:', testData)
      }
    } catch (error) {
      console.log('‚ö†Ô∏è  Test base de donn√©es:', error.message)
    }
    
    // R√©sum√© final
    console.log('\nüéØ R√âSUM√â FINAL')
    console.log('===============')
    console.log('‚úÖ Connexion Supabase: OP√âRATIONNELLE')
    console.log('‚úÖ URL valide:', supabaseUrl)
    console.log('‚úÖ Cl√© API valide: Oui')
    console.log('‚úÖ Authentification: Disponible')
    console.log('üü¢ STATUT: PR√äT POUR AFRICA SUITE PULSE')
    
    return true
    
  } catch (error) {
    console.error('‚ùå Erreur critique:', error.message)
    console.log('\nüî¥ STATUT: ERREUR DE CONNEXION')
    return false
  }
}

// Ex√©cuter le test
testSupabaseSimple().then(success => {
  if (success) {
    console.log('\nüéâ SUPABASE PR√äT POUR LES TESTS COMPLETS!')
  } else {
    console.log('\n‚ö†Ô∏è  CONFIGURATION SUPABASE REQUISE')
  }
  process.exit(success ? 0 : 1)
})

